"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[340],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||c;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<c;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1979:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return p}});var r=n(7462),o=n(3366),c=(n(7294),n(3905)),i=["components"],a={title:"Service"},l=void 0,s={unversionedId:"service",id:"service",title:"Service",description:"Creating your first service",source:"@site/docs/service.md",sourceDirName:".",slug:"/service",permalink:"/dotnet-workshop/docs/service",editUrl:"https://github.com/stackworx/dotnet-workshop/edit/master/docs/docs/service.md",tags:[],version:"current",frontMatter:{title:"Service"},sidebar:"someSidebar",previous:{title:"First Controller",permalink:"/dotnet-workshop/docs/controller"},next:{title:"Dependency Injection",permalink:"/dotnet-workshop/docs/dependency-injection"}},u={},p=[{value:"Creating your first service",id:"creating-your-first-service",level:2},{value:"References",id:"references",level:3}],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"creating-your-first-service"},"Creating your first service"),(0,c.kt)("p",null,"The previous code works well enough but we don't want to end up with all our logic inside of controllers.\nWe should rather build shared re-usable services"),(0,c.kt)("p",null,"Let's move the logic out of the controller"),(0,c.kt)("p",null,"Right click on the project and select Add -> New Folder\nCreate a folder named ",(0,c.kt)("inlineCode",{parentName:"p"},"Services")),(0,c.kt)("p",null,"Right click on the project and select Add -> New Item and Select an empty class.\nName it Clock.cs\nMove this class into Services and update its namespace"),(0,c.kt)("p",null,"You should have something like this"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\n\nnamespace Stackworx.Workshop.Services\n{\n    public class Clock\n    {\n    }\n}\n")),(0,c.kt)("p",null,"Let's create a new method matching the logic from our controller"),(0,c.kt)("p",null,"Once that is done add a constructor to the Controller so that we can create an instance of our ",(0,c.kt)("inlineCode",{parentName:"p"},"Clock")," service"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp"},"private readonly Clock clock;\n\npublic ClockController()\n{\n    this.clock = new Clock();\n}\n")),(0,c.kt)("p",null,"Update your controller to use this method instead"),(0,c.kt)("h3",{id:"references"},"References"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/?view=aspnetcore-3.1&tabs=windows#dependency-injection-services"},"Dependency Injection"))))}f.isMDXComponent=!0}}]);