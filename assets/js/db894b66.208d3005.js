"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[722],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||l;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<l;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6144:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],c={title:"First Controller"},i=void 0,s={unversionedId:"controller",id:"controller",title:"First Controller",description:"Creating your first controller",source:"@site/docs/controller.md",sourceDirName:".",slug:"/controller",permalink:"/dotnet-workshop/docs/controller",editUrl:"https://github.com/stackworx/dotnet-workshop/edit/master/docs/docs/controller.md",tags:[],version:"current",frontMatter:{title:"First Controller"},sidebar:"someSidebar",previous:{title:"Project Structure (csproj)",permalink:"/dotnet-workshop/docs/project-structure"},next:{title:"Service",permalink:"/dotnet-workshop/docs/service"}},u={},p=[{value:"Creating your first controller",id:"creating-your-first-controller",level:2},{value:"Exercise",id:"exercise",level:3},{value:"Final Result",id:"final-result",level:3},{value:"References",id:"references",level:3}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"creating-your-first-controller"},"Creating your first controller"),(0,l.kt)("p",null,"Right click on the project and select Add -> New Item"),(0,l.kt)("p",null,"In the window that appears select new API Controller Class - Empty"),(0,l.kt)("p",null,"Move this into the Controllers folder"),(0,l.kt)("h3",{id:"exercise"},"Exercise"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add a GET request to path ",(0,l.kt)("inlineCode",{parentName:"li"},"/api/clock/now")," that returns the current time"),(0,l.kt)("li",{parentName:"ul"},"Poll this time on the frontend and display it")),(0,l.kt)("h3",{id:"final-result"},"Final Result"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'using Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System;\nusing System.Reflection.Metadata.Ecma335;\n\nnamespace Stackworx.Workshop.Controllers\n{\n    [Route("api/clock")]\n    [ApiController]\n    public class ClockController : ControllerBase\n    {\n        [HttpGet]\n        public ActionResult<DateTime> Get()\n        {\n            return DateTime.Now;\n        }\n    }\n}\n\n')),(0,l.kt)("p",null,"Now lets add a variable that selects wether to return UTC or Local server time"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"Get([FromQuery] bool utc = false)\n")),(0,l.kt)("p",null,"Navigate to ",(0,l.kt)("inlineCode",{parentName:"p"},"https://localhost:5001/api/clock?utc=true")," and you should see the time change"),(0,l.kt)("p",null,"The server is still not responding on ",(0,l.kt)("inlineCode",{parentName:"p"},"/api/clock/now")),(0,l.kt)("p",null,"Lets fix that by adding a ",(0,l.kt)("inlineCode",{parentName:"p"},'[Route("now")]')," decorator to the method"),(0,l.kt)("p",null,"Final Code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'using Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System;\n\nnamespace Stackworx.Workshop.Controllers\n{\n    [Route("api/clock")]\n    [ApiController]\n    public class ClockController : ControllerBase\n    {\n        [HttpGet]\n        [Route("now")]\n        public ActionResult<DateTime> Get([FromQuery] bool utc = false)\n        {\n            if (utc) {\n                return DateTime.UtcNow;\n            } else\n            {\n                return DateTime.Now;\n            }\n\n        }\n    }\n}\n')),(0,l.kt)("p",null,"Now lets call this api from React"),(0,l.kt)("h3",{id:"references"},"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/actions?view=aspnetcore-3.1"},"Controllers"))))}f.isMDXComponent=!0}}]);